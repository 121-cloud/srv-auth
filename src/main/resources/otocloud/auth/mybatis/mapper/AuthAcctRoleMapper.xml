<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="otocloud.auth.mybatis.mapper.AuthAcctRoleMapper" >
  <resultMap id="BaseResultMap" type="otocloud.auth.mybatis.entity.AuthAcctRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="org_acct_id" property="orgAcctId" jdbcType="INTEGER" />
    <result column="auth_role_id" property="authRoleId" jdbcType="INTEGER" />
    <result column="auth_type_code" property="authTypeCode" jdbcType="VARCHAR" />
    <result column="ref_id" property="refId" jdbcType="INTEGER" />
    <result column="entry_id" property="entryId" jdbcType="INTEGER" />
    <result column="entry_datetime" property="entryDatetime" jdbcType="TIMESTAMP" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
    <result column="update_datetime" property="updateDatetime" jdbcType="TIMESTAMP" />
    <result column="delete_id" property="deleteId" jdbcType="INTEGER" />
    <result column="delete_datetime" property="deleteDatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, org_acct_id, auth_role_id, auth_type_code, ref_id, entry_id, entry_datetime, 
    update_id, update_datetime, delete_id, delete_datetime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="otocloud.auth.mybatis.entity.AuthAcctRoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from auth_acct_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from auth_acct_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from auth_acct_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="otocloud.auth.mybatis.entity.AuthAcctRole"
          useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into auth_acct_role (id, org_acct_id, auth_role_id, 
      auth_type_code, ref_id, entry_id, 
      entry_datetime, update_id, update_datetime, 
      delete_id, delete_datetime)
    values (#{id,jdbcType=INTEGER}, #{orgAcctId,jdbcType=INTEGER}, #{authRoleId,jdbcType=INTEGER}, 
      #{authTypeCode,jdbcType=VARCHAR}, #{refId,jdbcType=INTEGER}, #{entryId,jdbcType=INTEGER}, 
      #{entryDatetime,jdbcType=TIMESTAMP}, #{updateId,jdbcType=INTEGER}, #{updateDatetime,jdbcType=TIMESTAMP}, 
      #{deleteId,jdbcType=INTEGER}, #{deleteDatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="otocloud.auth.mybatis.entity.AuthAcctRole" >
    insert into auth_acct_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orgAcctId != null" >
        org_acct_id,
      </if>
      <if test="authRoleId != null" >
        auth_role_id,
      </if>
      <if test="authTypeCode != null" >
        auth_type_code,
      </if>
      <if test="refId != null" >
        ref_id,
      </if>
      <if test="entryId != null" >
        entry_id,
      </if>
      <if test="entryDatetime != null" >
        entry_datetime,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="updateDatetime != null" >
        update_datetime,
      </if>
      <if test="deleteId != null" >
        delete_id,
      </if>
      <if test="deleteDatetime != null" >
        delete_datetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orgAcctId != null" >
        #{orgAcctId,jdbcType=INTEGER},
      </if>
      <if test="authRoleId != null" >
        #{authRoleId,jdbcType=INTEGER},
      </if>
      <if test="authTypeCode != null" >
        #{authTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="refId != null" >
        #{refId,jdbcType=INTEGER},
      </if>
      <if test="entryId != null" >
        #{entryId,jdbcType=INTEGER},
      </if>
      <if test="entryDatetime != null" >
        #{entryDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateDatetime != null" >
        #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteId != null" >
        #{deleteId,jdbcType=INTEGER},
      </if>
      <if test="deleteDatetime != null" >
        #{deleteDatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="otocloud.auth.mybatis.entity.AuthAcctRoleExample" resultType="java.lang.Integer" >
    select count(*) from auth_acct_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update auth_acct_role
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orgAcctId != null" >
        org_acct_id = #{record.orgAcctId,jdbcType=INTEGER},
      </if>
      <if test="record.authRoleId != null" >
        auth_role_id = #{record.authRoleId,jdbcType=INTEGER},
      </if>
      <if test="record.authTypeCode != null" >
        auth_type_code = #{record.authTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.refId != null" >
        ref_id = #{record.refId,jdbcType=INTEGER},
      </if>
      <if test="record.entryId != null" >
        entry_id = #{record.entryId,jdbcType=INTEGER},
      </if>
      <if test="record.entryDatetime != null" >
        entry_datetime = #{record.entryDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateId != null" >
        update_id = #{record.updateId,jdbcType=INTEGER},
      </if>
      <if test="record.updateDatetime != null" >
        update_datetime = #{record.updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteId != null" >
        delete_id = #{record.deleteId,jdbcType=INTEGER},
      </if>
      <if test="record.deleteDatetime != null" >
        delete_datetime = #{record.deleteDatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update auth_acct_role
    set id = #{record.id,jdbcType=INTEGER},
      org_acct_id = #{record.orgAcctId,jdbcType=INTEGER},
      auth_role_id = #{record.authRoleId,jdbcType=INTEGER},
      auth_type_code = #{record.authTypeCode,jdbcType=VARCHAR},
      ref_id = #{record.refId,jdbcType=INTEGER},
      entry_id = #{record.entryId,jdbcType=INTEGER},
      entry_datetime = #{record.entryDatetime,jdbcType=TIMESTAMP},
      update_id = #{record.updateId,jdbcType=INTEGER},
      update_datetime = #{record.updateDatetime,jdbcType=TIMESTAMP},
      delete_id = #{record.deleteId,jdbcType=INTEGER},
      delete_datetime = #{record.deleteDatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="otocloud.auth.mybatis.entity.AuthAcctRole" >
    update auth_acct_role
    <set >
      <if test="orgAcctId != null" >
        org_acct_id = #{orgAcctId,jdbcType=INTEGER},
      </if>
      <if test="authRoleId != null" >
        auth_role_id = #{authRoleId,jdbcType=INTEGER},
      </if>
      <if test="authTypeCode != null" >
        auth_type_code = #{authTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="refId != null" >
        ref_id = #{refId,jdbcType=INTEGER},
      </if>
      <if test="entryId != null" >
        entry_id = #{entryId,jdbcType=INTEGER},
      </if>
      <if test="entryDatetime != null" >
        entry_datetime = #{entryDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateDatetime != null" >
        update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteId != null" >
        delete_id = #{deleteId,jdbcType=INTEGER},
      </if>
      <if test="deleteDatetime != null" >
        delete_datetime = #{deleteDatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="otocloud.auth.mybatis.entity.AuthAcctRole" >
    update auth_acct_role
    set org_acct_id = #{orgAcctId,jdbcType=INTEGER},
      auth_role_id = #{authRoleId,jdbcType=INTEGER},
      auth_type_code = #{authTypeCode,jdbcType=VARCHAR},
      ref_id = #{refId,jdbcType=INTEGER},
      entry_id = #{entryId,jdbcType=INTEGER},
      entry_datetime = #{entryDatetime,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=INTEGER},
      update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      delete_id = #{deleteId,jdbcType=INTEGER},
      delete_datetime = #{deleteDatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="otocloud.auth.mybatis.entity.AuthAcctRoleExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from auth_acct_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>